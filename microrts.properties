# STANDALONE = Starts MicroRTS as a standalone instance (No remote agents).
# GUI = Starts the microRTS GUI.
# SERVER = Starts MicroRTS as a server instance.
# CLIENT = Starts MicroRTS as a client instance.
launch_mode=CLIENT

################### NETWORKING ###################
# Only needed if modes are SERVER/CLIENT
# server_address=127.0.0.1
# server_port=9898
# 1 = XML
# 2 = JSON
serialization_type=2

# true if terrain, width and height are to be passed in every single state
# false to pass that constant data only in pre-game analysis
constants_in_state=true
# true to compress terrain information using run-length encoding, where
# 0 = A and 1 = B, false to send the full binary data
compress_terrain=false
##################################################

# MAP
map_location=/home/dodo/Code/microrts/maps/16x16/basesWorkers16x16.xml

#### GAME SETTINGS ###

# The max number of cycles the game will perform.
max_cycles=5000

# update interval, in milliseconds
# ignored if headless == true
update_interval=1

# in headless mode, no window is drawn when running the game
# the game also updates without intervals, which is much faster
headless=false

# If false, the players have full vision of the map.
partially_observable=false

# whether to close the game window as soon as the game ends,
# or to keep it open in the last game state
close_on_end=true

# Versions of the Unit Type Table (DEFAULT = 2)
# 1 = original
# 2 = original finetuned
# 3 = non-deterministic version of original finetuned (damages are random)
UTT_version=2

# Conflict policies (DEFAULT = 1)
# 1 = A conflict resolution policy where move conflicts cancel both moves
# 2 = A conflict resolution policy where move conflicts are solved randomly
# 3 = A conflict resolution policy where move conflicts are solved by alternating the units trying to move
conflict_policy=1

# In STANDALONE mode, set which AIs to play
# in CLIENT mode, AI1 will always be created via socket,
# but AI2 wil be used as the AI that will play against AI1
AI1=ai.abstraction.WorkerRush
AI2=ai.RandomBiasedAI
